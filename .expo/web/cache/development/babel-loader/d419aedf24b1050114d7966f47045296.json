{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/anirudh/Desktop/KAppAthon/src/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Formik } from 'formik';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-elements';\nimport FormInput from \"../components/FormInput\";\nimport FormButton from \"../components/FormButton.js\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n\n    _this.handleEmailChange = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordChange = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.onLogin = function _callee() {\n      var _this$state, email, password;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n\n              try {\n                if (email.length > 0 && password.length > 0) {\n                  _this.props.navigation.navigate('AdminDash');\n                }\n              } catch (error) {\n                alert(error);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.goToSignup = function () {\n      return _this.props.navigation.navigate('Signup');\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        onSubmit: function onSubmit(values) {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, function (formikProps) {\n        return React.createElement(Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }, React.createElement(FormInput, {\n          name: \"email\",\n          value: values.email,\n          onChangeText: formikProps.handleChange('email'),\n          placeholder: \"Enter email\",\n          autoCapitalize: \"none\",\n          iconName: \"ios-mail\",\n          iconColor: \"#2C384A\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }\n        }), React.createElement(FormInput, {\n          name: \"password\",\n          value: values.password,\n          onChangeText: formikProps.handleChange('password'),\n          placeholder: \"Enter password\",\n          secureTextEntry: true,\n          iconName: \"ios-lock\",\n          iconColor: \"#2C384A\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          style: styles.buttonContainer,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }\n        }, React.createElement(FormButton, {\n          buttonType: \"outline\",\n          onPress: formikProps.handleSubmit,\n          title: \"LOGIN\",\n          buttonColor: \"#039BE5\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        })));\n      }), React.createElement(Button, {\n        title: \"Don't have an account? Sign Up\",\n        onPress: this.goToSignup,\n        titleStyle: {\n          color: '#F57C00'\n        },\n        type: \"clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  buttonContainer: {\n    margin: 25\n  }\n});","map":{"version":3,"sources":["/home/anirudh/Desktop/KAppAthon/src/screens/LoginScreen.js"],"names":["Formik","React","Button","FormInput","FormButton","LoginScreen","state","email","password","handleEmailChange","setState","handlePasswordChange","onLogin","length","props","navigation","navigate","error","alert","goToSignup","styles","container","values","formikProps","handleChange","buttonContainer","handleSubmit","color","Component","StyleSheet","create","flex","backgroundColor","margin"],"mappings":"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","sourcesContent":["import { Formik } from 'formik'\nimport React from 'react'\nimport { StyleSheet, SafeAreaView, View } from 'react-native'\nimport { Button } from 'react-native-elements'\nimport FormInput from '../components/FormInput'\nimport FormButton from '../components/FormButton.js'\n\nexport default class LoginScreen extends React.Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleEmailChange = email => {\n    this.setState({ email })\n  }\n\n  handlePasswordChange = password => {\n    this.setState({ password })\n  }\n\n  onLogin = async () => {\n    const { email, password } = this.state\n    try {\n      if (email.length > 0 && password.length > 0) {\n        this.props.navigation.navigate('AdminDash')\n      }\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  goToSignup = () => this.props.navigation.navigate('Signup')\n  render() {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          onSubmit={values => {}}\n        >\n          {formikProps => (\n            <Fragment>\n              <FormInput\n                name=\"email\"\n                value={values.email}\n                onChangeText={formikProps.handleChange('email')}\n                placeholder=\"Enter email\"\n                autoCapitalize=\"none\"\n                iconName=\"ios-mail\"\n                iconColor=\"#2C384A\"\n              />\n              <FormInput\n                name=\"password\"\n                value={values.password}\n                onChangeText={formikProps.handleChange('password')}\n                placeholder=\"Enter password\"\n                secureTextEntry\n                iconName=\"ios-lock\"\n                iconColor=\"#2C384A\"\n              />\n              <View style={styles.buttonContainer}>\n                <FormButton\n                  buttonType=\"outline\"\n                  onPress={formikProps.handleSubmit}\n                  title=\"LOGIN\"\n                  buttonColor=\"#039BE5\"\n                />\n              </View>\n            </Fragment>\n          )}\n        </Formik>\n        <Button\n          title=\"Don't have an account? Sign Up\"\n          onPress={this.goToSignup}\n          titleStyle={{\n            color: '#F57C00'\n          }}\n          type=\"clear\"\n        />\n      </SafeAreaView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  buttonContainer: {\n    margin: 25\n  }\n})\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}