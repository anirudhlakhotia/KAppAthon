{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/anirudh/Desktop/KAppAthon/src/screens/SignupScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createAccount } from \"../api/authentication\";\nimport SwitchSelector from \"react-native-switch-selector\";\nimport { heightPercentageToDP, widthPercentageToDP } from 'react-native-responsive-screen';\nimport { post } from \"./../api/fetch\";\nimport CustomInput from \"./CustomInput\";\nimport { Formik, Field } from 'formik';\nimport * as yup from 'yup';\n\nvar SignupForm = function SignupForm(_ref) {\n  var buttonText = _ref.buttonText,\n      onSubmit = _ref.onSubmit,\n      children = _ref.children,\n      onAuthentication = _ref.onAuthentication,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      onChangeName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      onChangePassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confpassword = _useState6[0],\n      onChangeConfPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      onChangeEmail = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      section = _useState12[0],\n      onChangeSection = _useState12[1];\n\n  var _useState13 = useState('T'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      type = _useState14[0],\n      onChangeType = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      Class = _useState16[0],\n      onChangeClass = _useState16[1];\n\n  var submit = function submit() {\n    if (password == confpassword) {\n      console.log('Yes');\n      var user = {\n        name: name,\n        username: email,\n        password: password,\n        role: type === 'S' ? 'student' : 'teacher',\n        classattend: parseInt(Class),\n        section: section\n      };\n      console.log(user);\n      post('/register', user).then(function _callee(res) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(res);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    } else {\n      console.log('No');\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      phoneNumber: '',\n      password: '',\n      confirmPassword: '',\n      class: '',\n      section: '',\n      role: type === 'S' ? 'student' : 'teacher'\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n        isValid = _ref2.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(Field, {\n      component: CustomInput,\n      name: \"name\",\n      placeholder: \"Full Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"email\",\n      placeholder: \"Email Address\",\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"phoneNumber\",\n      placeholder: \"Phone Number\",\n      keyboardType: \"numeric\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"passowrd\",\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"confirmPassword\",\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"class\",\n      placeholder: \"Class\",\n      maxLength: 2,\n      keyboardType: \"numeric\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 18\n      }\n    }), React.createElement(Field, {\n      component: CustomInput,\n      name: \"section\",\n      placeholder: \"Section\",\n      maxLength: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 18\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }\n    }, '\\n'), React.createElement(SwitchSelector, {\n      initial: 0,\n      onPress: function onPress(value) {\n        return onChangeType(value);\n      },\n      style: {\n        width: widthPercentageToDP('50%')\n      },\n      buttonColor: \"#4B0082\",\n      borderColor: \"#4B0082\",\n      textColor: \"\\t#4B0082\",\n      options: [{\n        label: \"Teacher\",\n        value: \"T\"\n      }, {\n        label: \"Student\",\n        value: \"S\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, '\\n'), React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 3\n      }\n    }, React.createElement(TouchableOpacity, {\n      disabled: !isValid,\n      onPress: handleSubmit,\n      style: {\n        backgroundColor: '#9370DB',\n        height: widthPercentageToDP('10%'),\n        borderRadius: widthPercentageToDP('5%'),\n        width: widthPercentageToDP('90%'),\n        overflow: 'hidden'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 1\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        marginTop: widthPercentageToDP('2%'),\n        color: 'white',\n        fontFamily: 'sans-serif'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 4\n      }\n    }, \"Sign Up\"))));\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 1\n    }\n  }, '\\n'), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 1\n    }\n  }, '\\n'), errorMessage ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }\n  }, errorMessage) : null, children);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f2f2f2'\n  },\n  input: {\n    paddingLeft: 10,\n    height: widthPercentageToDP('10%'),\n    width: widthPercentageToDP('90%'),\n    borderColor: '#4B0082',\n    borderRadius: widthPercentageToDP('5%'),\n    borderWidth: 1,\n    marginTop: 20,\n    backgroundColor: '#f6f6f6'\n  },\n  btn: {\n    borderColor: '#9370DB'\n  }\n});\n\nvar SignupScreen = function SignupScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(SignupForm, {\n    buttonText: \"Sign Up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'blue'\n    },\n    onPress: function onPress() {\n      return navigation.navigate('LoginScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, \"Already have an account?\"));\n};\n\nexport default SignupScreen;","map":{"version":3,"sources":["/home/anirudh/Desktop/KAppAthon/src/screens/SignupScreen.js"],"names":["React","useState","createAccount","SwitchSelector","heightPercentageToDP","widthPercentageToDP","post","CustomInput","Formik","Field","yup","SignupForm","buttonText","onSubmit","children","onAuthentication","navigation","name","onChangeName","password","onChangePassword","confpassword","onChangeConfPassword","errorMessage","setErrorMessage","email","onChangeEmail","section","onChangeSection","type","onChangeType","Class","onChangeClass","submit","console","log","user","username","role","classattend","parseInt","then","res","styles","container","phoneNumber","confirmPassword","class","values","handleSubmit","isValid","value","width","label","backgroundColor","height","borderRadius","overflow","textAlign","marginTop","color","fontFamily","StyleSheet","create","flex","alignItems","justifyContent","input","paddingLeft","borderColor","borderWidth","btn","SignupScreen","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button,StyleSheet,ScrollView,TextInput,TouchableOpacity } from 'react-native';\nimport { createAccount } from '../api/authentication';\nimport SwitchSelector from \"react-native-switch-selector\";\nimport { heightPercentageToDP, widthPercentageToDP } from 'react-native-responsive-screen';\nimport { post } from './../api/fetch';\nimport CustomInput from './CustomInput'\nimport { Formik, Field } from 'formik'\nimport * as yup from 'yup'\nconst SignupForm = ({ buttonText, onSubmit, children, onAuthentication ,navigation}) => {\n  const [name, onChangeName] = useState('');\n  const [password, onChangePassword] = useState('');\n  const [confpassword, onChangeConfPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const[email,onChangeEmail]=useState('');\n  const[section,onChangeSection]=useState('');\n  const[type,onChangeType]=useState('T');\n  const[Class,onChangeClass]=useState('');\n\n  // const submit = () => {\n  //   onSubmit(email, password)\n  //     .then(async (res) => {\n  //       await setToken(res.auth_token);\n  //       onAuthentication();\n  //     })\n  //     .catch((res) => {\n  //       if (res && res.error) {\n  //         setErrorMessage(res.error);\n  //       }\n\n  //       setErrorMessage('Something went wrong.');\n  //     });\n  // };\n\n  const submit=()=>{\n    if (password == confpassword){\n      console.log('Yes')\n      const user={\n        name:name,\n        username:email,\n        password:password,\n        role:type==='S'?'student':'teacher',\n        classattend:parseInt(Class),\n        section:section\n      }\n      console.log(user)\n      post('/register',user).then(async (res)=>{\n        console.log(res)\n      })\n    }\n   else{\n     console.log('No')\n   }\n  \n  }\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n\n      {/* <TextInput\n        placeholder='Enter your Name'\n        style={styles.input}\n        onChangeText={(text) => onChangeName(text)}\n        value={name}\n      />\n      <TextInput\n        placeholder='Enter your Password'\n        style={styles.input}\n        onChangeText={(text) => onChangePassword(text)}\n        value={password}\n        secureTextEntry\n      />\n       <TextInput\n        placeholder='Confirm your Password'\n        style={styles.input}\n        onChangeText={(text) => onChangeConfPassword(text)}\n        value={confpassword}\n        secureTextEntry\n      />\n      <TextInput \n        label=\"Email\"\n        placeholder=\"Email\"\n        value={email}\n        blurOnSubmit={false}\n        maxLength={100}\n        style={styles.input}\n        onChangeText={(text) => onChangeEmail(text)}\n      />\n      <TextInput\n        placeholder='Enter your Class'\n        style={styles.input}\n        onChangeText={(text) => onChangeClass(text)}\n        value={Class}\n        keyboardType='number-pad'\n        maxLength={2}\n      />\n      <TextInput\n        placeholder='Enter your Section'\n        style={styles.input}\n        onChangeText={(text) => onChangeSection(text)}\n        value={section}\n        maxLength={1}\n      /> */}\n\n\n<Formik\n            initialValues={{\n              name: '',\n              email: '',\n              phoneNumber: '',\n              password: '',\n              confirmPassword: '',\n              class:'',\n              section:'',\n              role:type==='S'?'student':'teacher',\n            }}\n            onSubmit={values => console.log(values)}\n          >\n            {({ handleSubmit, isValid }) => (\n              <>\n                <Field\n                  component={CustomInput}\n                  name=\"name\"\n                  placeholder=\"Full Name\"\n                />\n                <Field\n                  component={CustomInput}\n                  name=\"email\"\n                  placeholder=\"Email Address\"\n                  keyboardType=\"email-address\"\n                />\n                <Field\n                  component={CustomInput}\n                  name=\"phoneNumber\"\n                  placeholder=\"Phone Number\"\n                  keyboardType=\"numeric\"\n                />\n                <Field\n                  component={CustomInput}\n                  name=\"passowrd\"\n                  placeholder=\"Password\"\n                  secureTextEntry\n                />\n                <Field\n                  component={CustomInput}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm Password\"\n                  secureTextEntry\n                />\n                 <Field\n                  component={CustomInput}\n                  name=\"class\"\n                  placeholder=\"Class\"\n                  maxLength={2}\n                  keyboardType='numeric'\n                />\n                 <Field\n                  component={CustomInput}\n                  name=\"section\"\n                  placeholder=\"Section\"\n                  maxLength={1}\n                />\n    <Text>{'\\n'}</Text>\n    <SwitchSelector\n    initial={0}\n    onPress={value => onChangeType(value)}\n  // textColor={colors.purple} //'#7a44cf'\n  // selectedColor={colors.white}\n  // buttonColor={colors.purple}\n  // borderColor={colors.purple}\n  style={{width: widthPercentageToDP('50%')}}\n  buttonColor='#4B0082'\n  borderColor='#4B0082'\n  textColor='\t#4B0082'\n  options={[\n    { label: \"Teacher\", value: \"T\" }, //images.feminino = require('./path_to/assets/img/feminino.png')\n    { label: \"Student\", value: \"S\" } //images.masculino = require('./path_to/assets/img/masculino.png')\n  ]}\n/>\n{/* \n                <Button\n                  onPress={handleSubmit}\n                  title=\"SIGN UP\"\n                  disabled={!isValid}\n                /> */}\n                <Text>{'\\n'}</Text>\n  <View style={styles.container}>\n<TouchableOpacity disabled={!isValid} onPress={handleSubmit} style={{backgroundColor: '#9370DB', height: widthPercentageToDP('10%'),borderRadius:widthPercentageToDP('5%'), width: widthPercentageToDP('90%'), overflow:'hidden', }}>\n   <Text style={{textAlign:'center',marginTop:widthPercentageToDP('2%'),color:'white',fontFamily:'sans-serif'}}>Sign Up</Text>\n</TouchableOpacity>\n</View>\n              </>\n            )}\n          </Formik>  \n<Text>{'\\n'}</Text>\n<Text>{'\\n'}</Text>\n\n      {errorMessage ? <Text>{errorMessage}</Text> : null}\n      {children}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor:'#f2f2f2'\n  },\n  input: {\n    paddingLeft:10,\n    height: widthPercentageToDP('10%'),\n    width: widthPercentageToDP('90%'),\n    borderColor: '#4B0082',\n    borderRadius: widthPercentageToDP('5%'),\n    borderWidth: 1,\n    marginTop: 20,\n    backgroundColor: '#f6f6f6'\n  },\n  btn: {\n    borderColor:'#9370DB',\n  }\n});\nconst SignupScreen = ({ navigation }) => {\n  return (\n    <SignupForm buttonText=\"Sign Up\">\n      <Text style={{color: 'blue'}}\n      onPress={() => navigation.navigate('LoginScreen')}>\n Already have an account?\n</Text>\n    </SignupForm>\n  );\n};\n\nexport default SignupScreen;\n"]},"metadata":{},"sourceType":"module"}