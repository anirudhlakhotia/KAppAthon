{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nexport var getToken = function getToken() {\n  var value;\n  return _regeneratorRuntime.async(function getToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@auth_token'));\n\n        case 3:\n          value = _context.sent;\n\n          if (!(value !== null)) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", value);\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", null);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var setToken = function setToken(token) {\n  return _regeneratorRuntime.async(function setToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('@auth_token', token));\n\n        case 3:\n          console.log('SET TOKEN');\n          _context2.next = 9;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", null);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};","map":{"version":3,"sources":["/home/anirudh/Desktop/KAppAthon/src/api/token.js"],"names":["AsyncStorage","getToken","getItem","value","setToken","token","setItem","console","log"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEAD,YAAY,CAACE,OAAb,CAAqB,aAArB,CAFA;;AAAA;AAEdC,UAAAA,KAFc;;AAAA,gBAGhBA,KAAK,KAAK,IAHM;AAAA;AAAA;AAAA;;AAAA,2CAIXA,KAJW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAOb,IAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAWP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEdL,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCD,KAApC,CAFc;;AAAA;AAGpBE,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAHoB;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAKb,IALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\n\nexport const getToken = async () => {\n  try {\n    const value = await AsyncStorage.getItem('@auth_token');\n    if (value !== null) {\n      return value;\n    }\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const setToken = async (token) => {\n  try {\n    await AsyncStorage.setItem('@auth_token', token);\n    console.log('SET TOKEN')\n  } catch (e) {\n    return null;\n  }\n};"]},"metadata":{},"sourceType":"module"}