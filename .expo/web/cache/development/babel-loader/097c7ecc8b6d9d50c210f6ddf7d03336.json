{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/anirudh/Desktop/KAppAthon/src/forms/SignupForms.js\";\n\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { setToken } from \"../api/token\";\n\nvar SignupForm = function SignupForm(_ref) {\n  var buttonText = _ref.buttonText,\n      onSubmit = _ref.onSubmit,\n      children = _ref.children,\n      onAuthentication = _ref.onAuthentication;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      onChangeEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      onChangePassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var submit = function submit() {\n    onSubmit(email, password).then(function _callee(res) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(setToken(res.auth_token));\n\n            case 2:\n              onAuthentication();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (res) {\n      if (res && res.error) {\n        setErrorMessage(res.error);\n      }\n\n      setErrorMessage('Something went wrong.');\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Enter your email ID\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangeEmail(text);\n    },\n    value: email,\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter your Password\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangePassword(text);\n    },\n    value: password,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }), React.createElement(Button, {\n    title: buttonText,\n    color: \"black\",\n    onPress: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), errorMessage ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, errorMessage) : null, children);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    paddingLeft: 10,\n    height: 40,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 20\n  }\n});\nexport default SignupForm;","map":{"version":3,"sources":["/home/anirudh/Desktop/KAppAthon/src/forms/SignupForms.js"],"names":["React","useState","setToken","SignupForm","buttonText","onSubmit","children","onAuthentication","email","onChangeEmail","password","onChangePassword","errorMessage","setErrorMessage","submit","then","res","auth_token","catch","error","styles","container","input","text","StyleSheet","create","flex","alignItems","justifyContent","paddingLeft","height","width","borderColor","borderWidth","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ScrollView, StyleSheet, TextInput, Button, Text } from 'react-native';\nimport { setToken } from '../api/token';\n\nconst SignupForm = ({ buttonText, onSubmit, children, onAuthentication }) => {\n  const [email, onChangeEmail] = useState('');\n  const [password, onChangePassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const submit = () => {\n    onSubmit(email, password)\n      .then(async (res) => {\n        await setToken(res.auth_token);\n        onAuthentication();\n      })\n      .catch((res) => {\n        if (res && res.error) {\n          setErrorMessage(res.error);\n        }\n\n        setErrorMessage('Something went wrong.');\n      });\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <TextInput\n        placeholder='Enter your email ID'\n        style={styles.input}\n        onChangeText={(text) => onChangeEmail(text)}\n        value={email}\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        placeholder='Enter your Password'\n        style={styles.input}\n        onChangeText={(text) => onChangePassword(text)}\n        value={password}\n        secureTextEntry\n      />\n       <br>\n      </br>\n      <Button title={buttonText} color='black' onPress={submit} />\n      {errorMessage ? <Text>{errorMessage}</Text> : null}\n      {children}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    paddingLeft:10,\n    height: 40,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 20,\n  },\n});\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}