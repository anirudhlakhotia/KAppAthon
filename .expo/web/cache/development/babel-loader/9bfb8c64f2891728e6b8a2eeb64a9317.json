{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/anirudh/Desktop/KAppAthon/src/screens/SignupScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { createAccount } from \"../api/authentication\";\nimport SwitchSelector from \"react-native-switch-selector\";\nimport { heightPercentageToDP, widthPercentageToDP } from 'react-native-responsive-screen';\n\nvar SignupForm = function SignupForm(_ref) {\n  var buttonText = _ref.buttonText,\n      onSubmit = _ref.onSubmit,\n      children = _ref.children,\n      onAuthentication = _ref.onAuthentication,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      onChangeName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      onChangePassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confpassword = _useState6[0],\n      onChangeConfPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      onChangeEmail = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      section = _useState12[0],\n      onChangeSection = _useState12[1];\n\n  var _useState13 = useState({\n    type: '',\n    class: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      state = _useState14[0],\n      setState = _useState14[1];\n\n  var submit = function submit() {\n    if (password == confpassword) {\n      console.log('Yes');\n      var user = {\n        name: name,\n        email: email,\n        password: password,\n        role: state.type === 'S' ? 'Student' : 'Teacher',\n        class: state.class,\n        section: section\n      };\n      console.log(user);\n    } else {\n      console.log('No');\n    }\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Enter your Name\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangeName(text);\n    },\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter your Password\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangePassword(text);\n    },\n    value: password,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Confirm your Password\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangeConfPassword(text);\n    },\n    value: confpassword,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    placeholder: \"Email\",\n    value: email,\n    blurOnSubmit: false,\n    maxLength: 100,\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangeEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter your Class\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return setState({\n        class: text\n      });\n    },\n    value: state.class,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter your Section\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangeSection(text);\n    },\n    value: section,\n    maxLength: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter your Password\",\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return onChangePassword(text);\n    },\n    value: password,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, '\\n'), React.createElement(SwitchSelector, {\n    initial: 0,\n    onPress: function onPress(value) {\n      return setState({\n        type: value\n      });\n    },\n    style: {\n      width: widthPercentageToDP('50%')\n    },\n    buttonColor: \"#7a44cf\",\n    borderColor: \"#7a44cf\",\n    textColor: \"#7a44cf\",\n    options: [{\n      label: \"Teacher\",\n      value: \"T\"\n    }, {\n      label: \"Student\",\n      value: \"S\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 1\n    }\n  }, '\\n'), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 1\n    }\n  }, '\\n'), React.createElement(Button, {\n    title: buttonText,\n    color: \"black\",\n    onPress: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 2\n    }\n  }), errorMessage ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, errorMessage) : null, children);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    paddingLeft: 10,\n    height: 40,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 20\n  }\n});\n\nvar SignupScreen = function SignupScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(SignupForm, {\n    buttonText: \"Sign Up\",\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"\\n\"));\n};\n\nexport default SignupScreen;","map":{"version":3,"sources":["/home/anirudh/Desktop/KAppAthon/src/screens/SignupScreen.js"],"names":["React","useState","createAccount","SwitchSelector","heightPercentageToDP","widthPercentageToDP","SignupForm","buttonText","onSubmit","children","onAuthentication","navigation","name","onChangeName","password","onChangePassword","confpassword","onChangeConfPassword","errorMessage","setErrorMessage","email","onChangeEmail","section","onChangeSection","type","class","state","setState","submit","console","log","user","role","styles","container","input","text","value","width","label","StyleSheet","create","flex","alignItems","justifyContent","paddingLeft","height","borderColor","borderWidth","marginTop","SignupScreen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button,StyleSheet,ScrollView,TextInput } from 'react-native';\nimport { createAccount } from '../api/authentication';\n// import SignupForm from '../forms/SignupForms';\nimport SwitchSelector from \"react-native-switch-selector\";\nimport { heightPercentageToDP, widthPercentageToDP } from 'react-native-responsive-screen';\nconst SignupForm = ({ buttonText, onSubmit, children, onAuthentication ,navigation}) => {\n  const [name, onChangeName] = useState('');\n  const [password, onChangePassword] = useState('');\n  const [confpassword, onChangeConfPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const[email,onChangeEmail]=useState('');\n  const[section,onChangeSection]=useState('');\n  const [state, setState] = useState({\n        type:'',\n        class:'',\n      })\n  // const submit = () => {\n  //   onSubmit(email, password)\n  //     .then(async (res) => {\n  //       await setToken(res.auth_token);\n  //       onAuthentication();\n  //     })\n  //     .catch((res) => {\n  //       if (res && res.error) {\n  //         setErrorMessage(res.error);\n  //       }\n\n  //       setErrorMessage('Something went wrong.');\n  //     });\n  // };\n\n  const submit=()=>{\n    if (password == confpassword){\n      console.log('Yes')\n      const user={\n        name:name,\n        email:email,\n        password:password,\n        role:state.type==='S'?'Student':'Teacher',\n        class:state.class,\n        section:section\n      }\n      console.log(user)\n    }\n   else{\n     console.log('No')\n   }\n  \n  }\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n\n      <TextInput\n        placeholder='Enter your Name'\n        style={styles.input}\n        onChangeText={(text) => onChangeName(text)}\n        value={name}\n      />\n      <TextInput\n        placeholder='Enter your Password'\n        style={styles.input}\n        onChangeText={(text) => onChangePassword(text)}\n        value={password}\n        secureTextEntry\n      />\n       <TextInput\n        placeholder='Confirm your Password'\n        style={styles.input}\n        onChangeText={(text) => onChangeConfPassword(text)}\n        value={confpassword}\n        secureTextEntry\n      />\n      <TextInput \n        label=\"Email\"\n        placeholder=\"Email\"\n        value={email}\n        blurOnSubmit={false}\n        maxLength={100}\n        style={styles.input}\n        onChangeText={(text) => onChangeEmail(text)}\n      />\n      <TextInput\n        placeholder='Enter your Class'\n        style={styles.input}\n        onChangeText={(text) => setState({class:text})}\n        value={state.class}\n        keyboardType='number-pad'\n        maxLength={2}\n      />\n      <TextInput\n        placeholder='Enter your Section'\n        style={styles.input}\n        onChangeText={(text) => onChangeSection(text)}\n        value={section}\n        maxLength={1}\n      />\n    <TextInput\n        placeholder='Enter your Password'\n        style={styles.input}\n        onChangeText={(text) => onChangePassword(text)}\n        value={password}\n        secureTextEntry\n      />\n      <Text>{'\\n'}</Text>\n\n         <SwitchSelector\n  initial={0}\n  onPress={value => setState({ type: value })}\n  // textColor={colors.purple} //'#7a44cf'\n  // selectedColor={colors.white}\n  // buttonColor={colors.purple}\n  // borderColor={colors.purple}\n  style={{width: widthPercentageToDP('50%')}}\n  buttonColor='#7a44cf'\n  borderColor='#7a44cf'\n  textColor='#7a44cf'\n  options={[\n    { label: \"Teacher\", value: \"T\" }, //images.feminino = require('./path_to/assets/img/feminino.png')\n    { label: \"Student\", value: \"S\" } //images.masculino = require('./path_to/assets/img/masculino.png')\n  ]}\n/>\n<Text>{'\\n'}</Text>\n<Text>{'\\n'}</Text>\n\n <Button title={buttonText} color='black' onPress={submit}/>\n      {errorMessage ? <Text>{errorMessage}</Text> : null}\n      {children}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    paddingLeft:10,\n    height: 40,\n    width: 300,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginTop: 20,\n  },\n});\nconst SignupScreen = ({ navigation }) => {\n  return (\n    <SignupForm buttonText=\"Sign Up\"  color='black'>\n      <Text>{\"\\n\"}</Text>\n      {/* <Button\n       \n        title='Sign Up'\n        onPress={()=> {console.log(name)}}>\n      </Button> */}\n      {/* <Text>{\"\\n\"}</Text> */}\n    </SignupForm>\n  );\n};\n\nexport default SignupScreen;\n"]},"metadata":{},"sourceType":"module"}