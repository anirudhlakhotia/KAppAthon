{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/anirudh/Desktop/KAppAthon/node_modules/react-native-floating-label-input/src/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./styles\";\nimport makeVisibleWhite from \"./assets/make_visible_white.png\";\nimport makeInvisibleWhite from \"./assets/make_invisible_white.png\";\nimport makeVisibleBlack from \"./assets/make_visible_black.png\";\nimport makeInvisibleBlack from \"./assets/make_invisible_black.png\";\nvar setGlobalStyles = {\n  containerStyles: {},\n  customLabelStyles: {},\n  inputStyles: {},\n  labelStyles: {},\n  showPasswordContainerStyles: {},\n  showPasswordImageStyles: {},\n  showCountdownStyles: {}\n};\n\nvar FloatingLabelInput = function FloatingLabelInput(props, ref) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      selection = _useState2[0],\n      setSelection = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocused = _useState4[0],\n      setIsFocused = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secureText = _useState6[0],\n      setSecureText = _useState6[1];\n\n  var inputRef = useRef(null);\n\n  var customLabelStyles = _objectSpread(_objectSpread({\n    fontSizeFocused: 10,\n    fontSizeBlurred: 14,\n    colorFocused: '#49658c',\n    colorBlurred: '#49658c'\n  }, setGlobalStyles.customLabelStyles), props.customLabelStyles);\n\n  var _useState7 = useState(new Animated.Value(customLabelStyles != undefined && customLabelStyles.leftBlurred !== undefined ? customLabelStyles.leftBlurred : 0)),\n      _useState8 = _slicedToArray(_useState7, 1),\n      leftAnimated = _useState8[0];\n\n  var _useState9 = useState(new Animated.Value(customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 14)),\n      _useState10 = _slicedToArray(_useState9, 1),\n      topAnimated = _useState10[0];\n\n  useEffect(function () {\n    if (props.isFocused === undefined) {\n      if (props.value !== '' || selection.end !== undefined) {\n        handleFocus();\n        setIsFocused(true);\n      } else {\n        handleBlur();\n        setIsFocused(false);\n      }\n    }\n  }, [props.value]);\n  useEffect(function () {\n    if (props.isFocused !== undefined) {\n      setIsFocused(props.isFocused);\n      Animated.parallel([Animated.timing(leftAnimated, {\n        useNativeDriver: true,\n        duration: 300,\n        easing: Easing.linear,\n        toValue: props.isFocused ? customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 0 : customLabelStyles.leftBlurred ? customLabelStyles.leftBlurred : 0\n      }), Animated.timing(topAnimated, {\n        toValue: props.isFocused ? customLabelStyles.topFocused ? customLabelStyles.topFocused : 0 : customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 14,\n        duration: 300,\n        easing: Easing.linear,\n        useNativeDriver: true\n      })]).start();\n    }\n  }, [props.isFocused]);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  });\n\n  function handleFocus() {\n    Animated.parallel([Animated.timing(leftAnimated, {\n      useNativeDriver: true,\n      duration: 300,\n      easing: Easing.linear,\n      toValue: customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 0\n    }), Animated.timing(topAnimated, {\n      toValue: customLabelStyles.topFocused ? customLabelStyles.topFocused : 0,\n      duration: 300,\n      easing: Easing.linear,\n      useNativeDriver: true\n    })]).start();\n    setIsFocused(true);\n  }\n\n  function handleBlur() {\n    if (props.value === '' || props.value == null) {\n      Animated.parallel([Animated.timing(leftAnimated, {\n        useNativeDriver: true,\n        duration: 300,\n        easing: Easing.linear,\n        toValue: customLabelStyles.leftBlurred ? customLabelStyles.leftBlurred : 0\n      }), Animated.timing(topAnimated, {\n        toValue: customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 14,\n        duration: 300,\n        easing: Easing.linear,\n        useNativeDriver: true\n      })]).start();\n      setIsFocused(false);\n    }\n\n    setSelection({});\n  }\n\n  function setFocus() {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.focus();\n  }\n\n  function _toggleVisibility() {\n    if (secureText) {\n      setSecureText(false);\n    } else {\n      setSecureText(true);\n    }\n  }\n\n  function onSubmitEditing() {\n    if (props.onSubmit !== undefined) {\n      props.onSubmit();\n    }\n  }\n\n  var imgSource = props.darkTheme ? secureText ? makeVisibleBlack : makeInvisibleBlack : secureText ? makeVisibleWhite : makeInvisibleWhite;\n\n  var style = _objectSpread(_objectSpread({\n    zIndex: 3,\n    position: 'absolute',\n    left: 0,\n    paddingLeft: 10,\n    fontSize: !isFocused ? customLabelStyles.fontSizeBlurred : customLabelStyles.fontSizeFocused,\n    color: !isFocused ? customLabelStyles.colorBlurred : customLabelStyles.colorFocused\n  }, setGlobalStyles.labelStyles), props.labelStyles);\n\n  var input = _objectSpread(_objectSpread(_objectSpread({}, styles.input), {}, {\n    color: customLabelStyles.colorFocused\n  }, setGlobalStyles.inputStyles), props.inputStyles);\n\n  var containerStyles = _objectSpread(_objectSpread(_objectSpread({}, styles.container), setGlobalStyles.containerStyles), props.containerStyles);\n\n  var toggleButton = _objectSpread(_objectSpread(_objectSpread({}, styles.toggleButton), setGlobalStyles.showPasswordContainerStyles), props.showPasswordContainerStyles);\n\n  var img = _objectSpread(_objectSpread(_objectSpread({}, styles.img), setGlobalStyles.showPasswordImageStyles), props.showPasswordImageStyles);\n\n  var countdown = _objectSpread(_objectSpread(_objectSpread({}, styles.countdown), setGlobalStyles.showCountdownStyles), props.showCountdownStyles);\n\n  return React.createElement(View, {\n    style: containerStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.Text, {\n    onPress: setFocus,\n    style: [style, {\n      transform: [{\n        translateX: leftAnimated\n      }, {\n        translateY: topAnimated\n      }]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  }, props.label), React.createElement(TextInput, _extends({\n    onSubmitEditing: onSubmitEditing,\n    secureTextEntry: props.isPassword !== undefined ? props.isPassword && secureText : false,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: inputRef\n  }, props, {\n    onSelectionChange: function onSelectionChange(evt) {\n      setSelection(evt.nativeEvent.selection);\n\n      if (props.onSelectionChange !== undefined) {\n        props.onSelectionChange(evt);\n      }\n    },\n    maxLength: props.mask !== undefined ? props.mask.length : props.maxLength !== undefined ? props.maxLength : undefined,\n    multiline: props.multiline,\n    onChangeText: function onChangeText(val) {\n      if (props.maskType !== undefined || props.mask !== undefined) {\n        if (props.maskType !== 'currency' && props.mask !== undefined) {\n          if (val.length <= props.mask.length) {\n            var newValue = '';\n\n            for (var i = 0; i < val.length; i++) {\n              if (props.mask[i].match(/[^0-9A-Za-z]/) && props.mask[i] !== val[i]) {\n                newValue += props.mask[i] + val[i];\n              } else {\n                newValue += val[i];\n              }\n            }\n\n            props.onChangeText && props.onChangeText(newValue);\n          }\n        } else if (props.maskType === 'currency') {\n          var divider = '';\n          var decimal = '';\n\n          if (props.currencyDivider === ',') {\n            divider = ',';\n            decimal = '.';\n          } else {\n            divider = '.';\n            decimal = ',';\n          }\n\n          if (props.value !== undefined && props.value.length < val.length) {\n            if (val.includes(decimal)) {\n              var intVal = val.split(decimal)[0].replace(/[,.]/g, '');\n              var decimalValue = val.split(decimal)[1];\n\n              if (intVal.length > 3) {\n                var arr = [];\n\n                for (var _i = 0; _i < intVal.length; _i += 3) {\n                  arr.push(intVal.split('').splice(intVal.length - _i, 3).join(''));\n                }\n\n                arr = arr.reverse();\n                arr.pop();\n                var initial = arr.join('');\n\n                if (intVal.includes(initial)) {\n                  intVal = intVal.replace(initial, '');\n                }\n\n                intVal = intVal + divider + arr.join(divider);\n              }\n\n              val = intVal + decimal + decimalValue;\n              var maxDecimalPlaces = props.maxDecimalPlaces !== undefined ? props.maxDecimalPlaces : 2;\n\n              if (val.split(decimal)[1] !== undefined && props.value.split(decimal)[1] !== undefined && val.split(decimal)[1].length > props.value.split(decimal)[1].length && props.value.split(decimal)[1].length === maxDecimalPlaces) {\n                return;\n              } else {\n                if (val.split(decimal)[1].length > maxDecimalPlaces) {\n                  val = val.slice(0, val.length - 1);\n                }\n              }\n            } else {\n              if (val.length > 3) {\n                var _arr = [];\n                var unmasked = val.replace(/[,.]/g, '');\n\n                for (var _i2 = 0; _i2 < unmasked.length; _i2 += 3) {\n                  _arr.push(unmasked.split('').splice(unmasked.length - _i2, 3).join(''));\n                }\n\n                _arr = _arr.reverse();\n\n                _arr.pop();\n\n                var _initial = _arr.join('');\n\n                if (unmasked.includes(_initial)) {\n                  unmasked = unmasked.replace(_initial, '');\n                }\n\n                val = unmasked + divider + _arr.join(divider);\n              }\n            }\n          }\n\n          props.onChangeText && props.onChangeText(val);\n        } else {\n          props.onChangeText && props.onChangeText(val);\n        }\n      } else {\n        props.onChangeText && props.onChangeText(val);\n      }\n    },\n    style: input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  })), props.isPassword ? React.createElement(TouchableOpacity, {\n    style: toggleButton,\n    onPress: _toggleVisibility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: props.customShowPasswordImage !== undefined ? props.customShowPasswordImage : imgSource,\n    resizeMode: \"contain\",\n    style: img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  })) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }\n  }), props.showCountdown && props.maxLength && React.createElement(Text, {\n    style: countdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }\n  }, props.maxLength - (props.value ? props.value.length : 0), ' ', props.countdownLabel));\n};\n\nexport { setGlobalStyles };\nexport default forwardRef(FloatingLabelInput);","map":{"version":3,"sources":["/home/anirudh/Desktop/KAppAthon/node_modules/react-native-floating-label-input/src/index.tsx"],"names":["React","useState","useRef","useEffect","forwardRef","useImperativeHandle","styles","makeVisibleWhite","makeInvisibleWhite","makeVisibleBlack","makeInvisibleBlack","setGlobalStyles","containerStyles","customLabelStyles","inputStyles","labelStyles","showPasswordContainerStyles","showPasswordImageStyles","showCountdownStyles","FloatingLabelInput","props","ref","selection","setSelection","isFocused","setIsFocused","secureText","setSecureText","inputRef","fontSizeFocused","fontSizeBlurred","colorFocused","colorBlurred","Animated","Value","undefined","leftBlurred","leftAnimated","topBlurred","topAnimated","value","end","handleFocus","handleBlur","parallel","timing","useNativeDriver","duration","easing","Easing","linear","toValue","leftFocused","topFocused","start","focus","current","blur","setFocus","_toggleVisibility","onSubmitEditing","onSubmit","imgSource","darkTheme","style","zIndex","position","left","paddingLeft","fontSize","color","input","container","toggleButton","img","countdown","transform","translateX","translateY","label","isPassword","evt","nativeEvent","onSelectionChange","mask","length","maxLength","multiline","val","maskType","newValue","i","match","onChangeText","divider","decimal","currencyDivider","includes","intVal","split","replace","decimalValue","arr","push","splice","join","reverse","pop","initial","maxDecimalPlaces","slice","unmasked","customShowPasswordImage","showCountdown","countdownLabel"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from 'react';\r\nimport {\r\n  View,\r\n  Animated,\r\n  Easing,\r\n  TextInput,\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInputProps,\r\n  TextStyle,\r\n  ViewStyle,\r\n  ImageStyle,\r\n  NativeSyntheticEvent,\r\n  TextInputSelectionChangeEventData,\r\n} from 'react-native';\r\nimport { styles } from './styles';\r\n\r\nimport makeVisibleWhite from './assets/make_visible_white.png';\r\nimport makeInvisibleWhite from './assets/make_invisible_white.png';\r\nimport makeVisibleBlack from './assets/make_visible_black.png';\r\nimport makeInvisibleBlack from './assets/make_invisible_black.png';\r\n\r\ninterface Props extends TextInputProps {\r\n  /**Style to the container of whole component*/\r\n  containerStyles?: ViewStyle;\r\n  /**Changes the color for hide/show password image*/\r\n  darkTheme?: true | false | undefined;\r\n  /**Value for the label, same as placeholder */\r\n  label: string;\r\n  /**Style to the label */\r\n  labelStyles?: TextStyle;\r\n  /**Set this to true if is password to have a show/hide input and secureTextEntry automatically*/\r\n  isPassword?: true | false | undefined;\r\n  /**Callback for action submit on the keyboard */\r\n  onSubmit?: Function;\r\n  /**Style to the show/hide password container */\r\n  showPasswordContainerStyles?: ViewStyle;\r\n  /**Style to the show/hide password image */\r\n  showPasswordImageStyles?: ImageStyle;\r\n  /**Style to the input */\r\n  inputStyles?: TextStyle;\r\n  /**Path to your custom image for show/hide input */\r\n  customShowPasswordImage?: string;\r\n  /**Custom Style for position, size and color for label, when it's focused or blurred*/\r\n  customLabelStyles?: {\r\n    leftFocused?: number;\r\n    leftBlurred?: number;\r\n    topFocused?: number;\r\n    topBlurred?: number;\r\n    fontSizeFocused?: number;\r\n    fontSizeBlurred?: number;\r\n    colorFocused?: string;\r\n    colorBlurred?: string;\r\n  };\r\n  /**Required if onFocus or onBlur is overrided*/\r\n  isFocused?: boolean;\r\n  /**Set a mask to your input*/\r\n  mask?: string;\r\n  /**Set mask type*/\r\n  maskType?: 'currency' | 'phone' | 'date' | 'card';\r\n  /**Set currency thousand dividers*/\r\n  currencyDivider?: ',' | '.';\r\n  /**Maxinum number of decimal places allowed for currency mask. */\r\n  maxDecimalPlaces?: number;\r\n  /**Changes the input from single line input to multiline input*/\r\n  multiline?: true | false | undefined;\r\n  /**Maxinum number of characters allowed. Overriden by mask if present */\r\n  maxLength?: number;\r\n  /**Shows the remaining number of characters allowed to be typed if maxLength or mask are present */\r\n  showCountdown?: true | false | undefined;\r\n  /**Style to the countdown text */\r\n  showCountdownStyles?: TextStyle;\r\n  /**Label for the remaining number of characters allowed shown after the number */\r\n  countdownLabel?: string;\r\n}\r\n\r\ninterface CustomLabelProps {\r\n  leftFocused?: number;\r\n  leftBlurred?: number;\r\n  topFocused?: number;\r\n  topBlurred?: number;\r\n  fontSizeFocused?: number;\r\n  fontSizeBlurred?: number;\r\n  colorFocused?: string;\r\n  colorBlurred?: string;\r\n}\r\n\r\n/**Set global styles for all your floating-label-inputs*/\r\nconst setGlobalStyles = {\r\n  /**Set global styles to all floating-label-inputs container*/\r\n  containerStyles: {} as ViewStyle,\r\n  /**Set global custom styles to all floating-label-inputs labels*/\r\n  customLabelStyles: {} as CustomLabelProps,\r\n  /**Set global styles to all floating-label-inputs input*/\r\n  inputStyles: {} as TextStyle,\r\n  /**Set global styles to all floating-label-inputs label*/\r\n  labelStyles: {} as TextStyle,\r\n  /**Set global styles to all floating-label-inputs show password container*/\r\n  showPasswordContainerStyles: {} as ViewStyle,\r\n  /**Set global styles to all floating-label-inputs show password image*/\r\n  showPasswordImageStyles: {} as ImageStyle,\r\n  /**Set global style to the countdown text */\r\n  showCountdownStyles: {} as TextStyle,\r\n};\r\n\r\ninterface InputRef {\r\n  focus(): void;\r\n  blur(): void;\r\n}\r\n\r\nconst FloatingLabelInput: React.ForwardRefRenderFunction<InputRef, Props> = (\r\n  props,\r\n  ref,\r\n) => {\r\n  const [selection, setSelection] = useState(\r\n    {} as { start: number; end: number },\r\n  );\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [secureText, setSecureText] = useState(true);\r\n  const inputRef = useRef<any>(null);\r\n\r\n  const customLabelStyles: CustomLabelProps = {\r\n    fontSizeFocused: 10,\r\n    fontSizeBlurred: 14,\r\n    colorFocused: '#49658c',\r\n    colorBlurred: '#49658c',\r\n    ...setGlobalStyles.customLabelStyles,\r\n    ...props.customLabelStyles,\r\n  };\r\n\r\n  const [leftAnimated] = useState(\r\n    new Animated.Value(\r\n      customLabelStyles != undefined &&\r\n      customLabelStyles.leftBlurred !== undefined\r\n        ? customLabelStyles.leftBlurred\r\n        : 0,\r\n    ),\r\n  );\r\n  const [topAnimated] = useState(\r\n    new Animated.Value(\r\n      customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 14,\r\n    ),\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (props.isFocused === undefined) {\r\n      if (props.value !== '' || selection.end !== undefined) {\r\n        handleFocus();\r\n        setIsFocused(true);\r\n      } else {\r\n        handleBlur();\r\n        setIsFocused(false);\r\n      }\r\n    }\r\n  }, [props.value]);\r\n\r\n  useEffect(() => {\r\n    if (props.isFocused !== undefined) {\r\n      setIsFocused(props.isFocused);\r\n      Animated.parallel([\r\n        Animated.timing(leftAnimated, {\r\n          useNativeDriver: true,\r\n          duration: 300,\r\n          easing: Easing.linear,\r\n          toValue: props.isFocused\r\n            ? customLabelStyles.leftFocused\r\n              ? customLabelStyles.leftFocused\r\n              : 0\r\n            : customLabelStyles.leftBlurred\r\n            ? customLabelStyles.leftBlurred\r\n            : 0,\r\n        }),\r\n        Animated.timing(topAnimated, {\r\n          toValue: props.isFocused\r\n            ? customLabelStyles.topFocused\r\n              ? customLabelStyles.topFocused\r\n              : 0\r\n            : customLabelStyles.topBlurred\r\n            ? customLabelStyles.topBlurred\r\n            : 14,\r\n          duration: 300,\r\n          easing: Easing.linear,\r\n          useNativeDriver: true,\r\n        }),\r\n      ]).start();\r\n    }\r\n  }, [props.isFocused]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus() {\r\n      inputRef.current.focus();\r\n    },\r\n    blur() {\r\n      inputRef.current.blur();\r\n    },\r\n  }));\r\n\r\n  function handleFocus() {\r\n    Animated.parallel([\r\n      Animated.timing(leftAnimated, {\r\n        useNativeDriver: true,\r\n        duration: 300,\r\n        easing: Easing.linear,\r\n        toValue: customLabelStyles.leftFocused\r\n          ? customLabelStyles.leftFocused\r\n          : 0,\r\n      }),\r\n      Animated.timing(topAnimated, {\r\n        toValue: customLabelStyles.topFocused\r\n          ? customLabelStyles.topFocused\r\n          : 0,\r\n        duration: 300,\r\n        easing: Easing.linear,\r\n        useNativeDriver: true,\r\n      }),\r\n    ]).start();\r\n    setIsFocused(true);\r\n  }\r\n\r\n  function handleBlur() {\r\n    if (props.value === '' || props.value == null) {\r\n      Animated.parallel([\r\n        Animated.timing(leftAnimated, {\r\n          useNativeDriver: true,\r\n          duration: 300,\r\n          easing: Easing.linear,\r\n          toValue: customLabelStyles.leftBlurred\r\n            ? customLabelStyles.leftBlurred\r\n            : 0,\r\n        }),\r\n        Animated.timing(topAnimated, {\r\n          toValue: customLabelStyles.topBlurred\r\n            ? customLabelStyles.topBlurred\r\n            : 14,\r\n          duration: 300,\r\n          easing: Easing.linear,\r\n          useNativeDriver: true,\r\n        }),\r\n      ]).start();\r\n      setIsFocused(false);\r\n    }\r\n    setSelection({} as { start: number; end: number });\r\n  }\r\n\r\n  function setFocus() {\r\n    inputRef.current?.focus();\r\n  }\r\n\r\n  function _toggleVisibility() {\r\n    if (secureText) {\r\n      setSecureText(false);\r\n    } else {\r\n      setSecureText(true);\r\n    }\r\n  }\r\n\r\n  function onSubmitEditing() {\r\n    if (props.onSubmit !== undefined) {\r\n      props.onSubmit();\r\n    }\r\n  }\r\n\r\n  let imgSource = props.darkTheme\r\n    ? secureText\r\n      ? makeVisibleBlack\r\n      : makeInvisibleBlack\r\n    : secureText\r\n    ? makeVisibleWhite\r\n    : makeInvisibleWhite;\r\n\r\n  const style: Object = {\r\n    zIndex: 3,\r\n    position: 'absolute',\r\n    left: 0,\r\n    paddingLeft: 10,\r\n    fontSize: !isFocused\r\n      ? customLabelStyles.fontSizeBlurred\r\n      : customLabelStyles.fontSizeFocused,\r\n    color: !isFocused\r\n      ? customLabelStyles.colorBlurred\r\n      : customLabelStyles.colorFocused,\r\n    ...setGlobalStyles.labelStyles,\r\n    ...props.labelStyles,\r\n  };\r\n\r\n  const input: Object = {\r\n    ...styles.input,\r\n    color: customLabelStyles.colorFocused,\r\n    ...setGlobalStyles.inputStyles,\r\n    ...props.inputStyles,\r\n  };\r\n\r\n  const containerStyles: Object = {\r\n    ...styles.container,\r\n    ...setGlobalStyles.containerStyles,\r\n    ...props.containerStyles,\r\n  };\r\n\r\n  const toggleButton = {\r\n    ...styles.toggleButton,\r\n    ...setGlobalStyles.showPasswordContainerStyles,\r\n    ...props.showPasswordContainerStyles,\r\n  };\r\n\r\n  const img = {\r\n    ...styles.img,\r\n    ...setGlobalStyles.showPasswordImageStyles,\r\n    ...props.showPasswordImageStyles,\r\n  };\r\n\r\n  const countdown = {\r\n    ...styles.countdown,\r\n    ...setGlobalStyles.showCountdownStyles,\r\n    ...props.showCountdownStyles,\r\n  };\r\n\r\n  return (\r\n    <View style={containerStyles}>\r\n      <Animated.Text\r\n        onPress={setFocus}\r\n        style={[\r\n          style,\r\n          {\r\n            transform: [\r\n              { translateX: leftAnimated },\r\n              { translateY: topAnimated },\r\n            ],\r\n          },\r\n        ]}\r\n      >\r\n        {props.label}\r\n      </Animated.Text>\r\n      <TextInput\r\n        onSubmitEditing={onSubmitEditing}\r\n        secureTextEntry={\r\n          props.isPassword !== undefined\r\n            ? props.isPassword && secureText\r\n            : false\r\n        }\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        ref={inputRef}\r\n        {...props}\r\n        onSelectionChange={(\r\n          evt: NativeSyntheticEvent<TextInputSelectionChangeEventData>,\r\n        ) => {\r\n          setSelection(evt.nativeEvent.selection);\r\n          if (props.onSelectionChange !== undefined) {\r\n            props.onSelectionChange(evt);\r\n          }\r\n        }}\r\n        maxLength={\r\n          props.mask !== undefined\r\n            ? props.mask.length\r\n            : props.maxLength !== undefined\r\n            ? props.maxLength\r\n            : undefined\r\n        }\r\n        multiline={props.multiline}\r\n        onChangeText={(val: string) => {\r\n          if (props.maskType !== undefined || props.mask !== undefined) {\r\n            if (props.maskType !== 'currency' && props.mask !== undefined) {\r\n              if (val.length <= props.mask.length) {\r\n                let newValue = '';\r\n\r\n                for (let i = 0; i < val.length; i++) {\r\n                  if (\r\n                    props.mask[i].match(/[^0-9A-Za-z]/) &&\r\n                    props.mask[i] !== val[i]\r\n                  ) {\r\n                    newValue += props.mask[i] + val[i];\r\n                  } else {\r\n                    newValue += val[i];\r\n                  }\r\n                }\r\n                props.onChangeText && props.onChangeText(newValue);\r\n              }\r\n            } else if (props.maskType === 'currency') {\r\n              let divider = '';\r\n              let decimal = '';\r\n              if (props.currencyDivider === ',') {\r\n                divider = ',';\r\n                decimal = '.';\r\n              } else {\r\n                divider = '.';\r\n                decimal = ',';\r\n              }\r\n              if (\r\n                props.value !== undefined &&\r\n                props.value.length < val.length\r\n              ) {\r\n                if (val.includes(decimal)) {\r\n                  let intVal = val.split(decimal)[0].replace(/[,.]/g, '');\r\n                  let decimalValue = val.split(decimal)[1];\r\n                  if (intVal.length > 3) {\r\n                    let arr: string[] = [];\r\n                    for (let i = 0; i < intVal.length; i += 3) {\r\n                      arr.push(\r\n                        intVal\r\n                          .split('')\r\n                          .splice(intVal.length - i, 3)\r\n                          .join(''),\r\n                      );\r\n                    }\r\n\r\n                    arr = arr.reverse();\r\n                    arr.pop();\r\n                    let initial = arr.join('');\r\n                    if (intVal.includes(initial)) {\r\n                      intVal = intVal.replace(initial, '');\r\n                    }\r\n                    intVal = intVal + divider + arr.join(divider);\r\n                  }\r\n\r\n                  val = intVal + decimal + decimalValue;\r\n\r\n                  let maxDecimalPlaces =\r\n                    props.maxDecimalPlaces !== undefined\r\n                      ? props.maxDecimalPlaces\r\n                      : 2;\r\n\r\n                  if (\r\n                    val.split(decimal)[1] !== undefined &&\r\n                    props.value.split(decimal)[1] !== undefined &&\r\n                    val.split(decimal)[1].length >\r\n                      props.value.split(decimal)[1].length &&\r\n                    props.value.split(decimal)[1].length === maxDecimalPlaces\r\n                  ) {\r\n                    return;\r\n                  } else {\r\n                    if (val.split(decimal)[1].length > maxDecimalPlaces) {\r\n                      val = val.slice(0, val.length - 1);\r\n                    }\r\n                  }\r\n                } else {\r\n                  if (val.length > 3) {\r\n                    let arr: string[] = [];\r\n                    let unmasked = val.replace(/[,.]/g, '');\r\n                    for (let i = 0; i < unmasked.length; i += 3) {\r\n                      arr.push(\r\n                        unmasked\r\n                          .split('')\r\n                          .splice(unmasked.length - i, 3)\r\n                          .join(''),\r\n                      );\r\n                    }\r\n\r\n                    arr = arr.reverse();\r\n                    arr.pop();\r\n                    let initial = arr.join('');\r\n                    if (unmasked.includes(initial)) {\r\n                      unmasked = unmasked.replace(initial, '');\r\n                    }\r\n                    val = unmasked + divider + arr.join(divider);\r\n                  }\r\n                }\r\n              }\r\n              props.onChangeText && props.onChangeText(val);\r\n            } else {\r\n              props.onChangeText && props.onChangeText(val);\r\n            }\r\n          } else {\r\n            props.onChangeText && props.onChangeText(val);\r\n          }\r\n        }}\r\n        style={input}\r\n      />\r\n      {props.isPassword ? (\r\n        <TouchableOpacity style={toggleButton} onPress={_toggleVisibility}>\r\n          <Image\r\n            source={\r\n              props.customShowPasswordImage !== undefined\r\n                ? props.customShowPasswordImage\r\n                : imgSource\r\n            }\r\n            resizeMode=\"contain\"\r\n            style={img}\r\n          />\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <View />\r\n      )}\r\n      {props.showCountdown && props.maxLength && (\r\n        <Text style={countdown}>\r\n          {props.maxLength - (props.value ? props.value.length : 0)}{' '}\r\n          {props.countdownLabel}\r\n        </Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\nexport { setGlobalStyles };\r\nexport default forwardRef(FloatingLabelInput);\r\n"]},"metadata":{},"sourceType":"module"}